import java.text.SimpleDateFormat

def getBuildDate() {
	return new SimpleDateFormat("yyMMddHH").format(new Date());
}

buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		// publish in play store
		classpath 'com.github.triplet.gradle:play-publisher:1.1.2'
		// data bindings
		classpath "com.android.databinding:dataBinder:1.0-rc1"
		// google cloud messages services
		classpath 'com.google.gms:google-services:1.3.0-beta1'
	}
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.databinding'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.0"

	defaultConfig {
		applicationId "com.livae.ff.app"
		minSdkVersion 16
		targetSdkVersion 23
		versionCode 15
		versionName "1.0"
		buildConfigField "int", "BUILD_DATE", getBuildDate()
		buildConfigField "boolean", "DEV", "false"
		buildConfigField "boolean", "TEST", "false"
		resConfigs "en", "es"
	}
	signingConfigs {
		release {
			storeFile file(KEYSTORE_FILE)
			storePassword KEYSTORE_PASSWORD
			keyAlias KEY_ALIAS
			keyPassword KEY_PASSWORD
		}
	}
	buildTypes {
		release {
			signingConfig signingConfigs.release
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			minifyEnabled true
			shrinkResources true
			debuggable false
		}
		debug {
			signingConfig signingConfigs.release
			shrinkResources true
		}
	}
	productFlavors {
		production {
		}
		dev {
			versionName "development"
			applicationId "com.livae.ff.app.dev"
			minSdkVersion 15
			buildConfigField "boolean", "DEV", "true"
		}
		devTest {
			versionName "test"
			applicationId "com.livae.ff.app.dev"
			minSdkVersion 18
			buildConfigField "boolean", "DEV", "true"
			buildConfigField "boolean", "TEST", "true"
			testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
			packagingOptions {
				exclude 'LICENSE.txt'
			}
		}
	}
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile project(path: ':api', configuration: 'android-endpoints')
	compile project(':common')

	compile 'com.android.support:support-v4:23.0.0'
	compile 'com.android.support:appcompat-v7:23.0.0'
	compile 'com.android.support:recyclerview-v7:23.0.0'
	compile 'com.android.support:cardview-v7:23.0.0'
	compile 'com.android.support:design:23.0.0'
	compile 'com.google.android.gms:play-services-base:7.8.0'
	compile 'com.google.android.gms:play-services-analytics:7.8.0'
	compile 'com.google.android.gms:play-services-gcm:7.8.0'
	compile 'com.squareup.okhttp:okhttp:2.4.0'
	compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'
	compile 'com.squareup.picasso:picasso:2.5.2'

	debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
	releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
	devTestCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
	compile 'com.facebook.stetho:stetho:1.1.1'
	compile 'com.facebook.stetho:stetho-okhttp:1.1.1'

	androidTestCompile 'com.android.support.test:runner:0.3'
	androidTestCompile 'com.android.support.test:rules:0.3'
	androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
	androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
	// force libraries for test version
	androidTestCompile 'com.google.code.findbugs:jsr305:2.0.1'
	androidTestCompile 'com.android.support:support-annotations:23.0.0'
	devTestCompile 'com.google.code.findbugs:jsr305:2.0.1'
	devTestCompile 'com.android.support:support-annotations:23.0.0'
}


apply plugin: 'com.github.triplet.play'

play {
//	serviceAccountEmail = '912982181540-t4mv71tkl7so07u4pa12tusqggnfnou9@developer.gserviceaccount.com'
	serviceAccountEmail = '545525739041-e0riq0edug1746n71cnejp2nh43609t7@developer.gserviceaccount.com'
//	pk12File = file('../flatter-forthright-853f79f83cc5.p12')
	pk12File = file('../AppHunt-291bdc0e7da7.p12')
	uploadImages = true
	track = 'alpha'
}
